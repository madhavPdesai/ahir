$pipe  B : $uint<32>  $depth 1 
// can point into 

$pipe  TMP : $uint<32>  $depth 1 
// can point into 

$storage  default_mem_pool : $array[1] $of $uint<8> // memory space index = 1  base address = 0  word size = 8
// can point into  mempool

$module [global_storage_initializer_]
	 $in ()
	 $out ()
$is
{
	$null
}
$module [mem_load__]
	 $in ( address : $uint<32>  )
	 $out ( data : $uint<8>  )
$is
{
	data := default_mem_pool[((address * 1 ) + 0 )] $buffering 1// bits of buffering = 8. 
}
$module [mem_store__]
	 $in ( address : $uint<32>   data : $uint<8>  )
	 $out ()
$is
{
	default_mem_pool[((address * 1 ) + 0 )] := data $buffering 1// bits of buffering = 8. 
}
$module [stage_2_daemon]
	 $in ()
	 $out ()
$is
{
	$branchblock [lOoP]
	{
		$merge $entry loopback 
		$endmerge
		x := TMP $buffering 1// bits of buffering = 32. 
		B := x $buffering 1// bits of buffering = 32. 
		$place[loopback]
	}
}
// Memory space 0: mempool 
// Memory space 1: default_mem_pool 
// use of gated clocks in modules 
