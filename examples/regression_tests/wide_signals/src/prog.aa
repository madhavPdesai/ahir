$pipe out_data : $uint<32> $depth 2
$pipe in_data : $uint<32> $depth 2 $p2p

$pipe wide_signal: $uint<128> $signal

$module [p2p_check_daemon] $in() $out () $is
{
	$branchblock[lOoP] {
		$dopipeline $depth 9 $buffering 2 $fullrate
		$merge $entry $loopback $endmerge
	 	CMD := in_data

		$volatile ws := ($concat CMD CMD CMD CMD)

		wide_signal := ws $mark WSM
		rs := wide_signal

		$rreport (p2p wide_signal_status wide_signal ws rs)
		$split (rs 32 32 32 32)
				(w0 w1 w2 w3)

		$volatile d := ($reduce | w0 w1 w2 w3)
		out_data := d $synch ($update WSM)
		$while 1
	}
}
