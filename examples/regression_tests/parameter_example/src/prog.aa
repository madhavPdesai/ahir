$parameter PDEPTH 2
$parameter LOG_PWIDTH 0x00000005
$parameter PWIDTH {2 ** LOG_PWIDTH }
$parameter LPDEPTH {~{~{PDEPTH + 2}}}
$parameter PZERO 0
$parameter INCREMENT 1

$constant ZERO8: $uint<8> := {PDEPTH - PDEPTH}
$constant FFF : $uint<10> := { 5 ** 5 }
$constant FFFF : $uint<8> := {0 + LOG_PWIDTH}

$pipe out_data : $uint<PWIDTH> $depth PDEPTH

$module [phi_check_daemon] $in() $out () $is
{
	$branchblock[lOoP] {
		$dopipeline $depth {PWIDTH/2}  $buffering LPDEPTH $fullrate
		$merge $entry $loopback 
			$phi COUNT := ($bitcast ($uint<32>) PZERO) $on $entry NCOUNT $on $loopback
		$endmerge
		$volatile NCOUNT := ((COUNT + INCREMENT) + ($zero<32> + $one<32>))
		out_data := COUNT
		$while 1
	}

	$attribute a1 PDEPTH
	$attribute a2 {PDEPTH + 1}
	$attribute a3 4
}
