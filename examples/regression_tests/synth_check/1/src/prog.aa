$noblock $pipe input_data s1 s2 s3 output_data : $uint<32>   $depth 2 $p2p

$volatile $module [add2] $in (a b: $uint<32>) $out (c: $uint<32>) $is
{
  c := (a + b)
}

$module [shift_register_daemon] $in () $out () $is
{
	$parallelblock[loop] {
		$branchblock[Stage1] {
			$dopipeline $depth 7 $fullrate
				$merge $entry $loopback $endmerge

				x  := input_data
				xs := x
				$volatile send := (xs [] 31)
				$guard (send) s1 := xs
			$while 1
		}
		$branchblock[Stage2] {
			$dopipeline $depth 7 $fullrate
				$merge $entry $loopback $endmerge
				x := s1
				xs := x

				$volatile send := (xs [] 31)
				$guard (send) s2 := xs
			$while 1
		}
		$branchblock[Stage3] {
			$dopipeline $depth 7 $fullrate
				$merge $entry $loopback $endmerge
				x := s2
				xs := x

				$volatile send := (xs [] 31)
				$guard (send) s3 := xs
			$while 1
		} $branchblock[Stage4] { $dopipeline $depth 7 $fullrate $merge $entry $loopback $endmerge x := s3 xs := x

				$volatile send := (xs [] 31)
				$guard (send) output_data := xs
			$while 1
		}
	}
}

