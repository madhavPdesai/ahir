$pipe in_data: $uint<32> $depth 2
$pipe out_data: $uint<32> $depth 2

$pipeline $depth 3 $fullrate  $module 
	[foo_bar_nonoperator] 
	$in (X: $uint<32>)
	$out (Y: $uint<32>) $is
{
	Y := (X + 1) $buffering 2
}


$pipeline $depth 3 $fullrate $operator $module 
	[foo_bar] 
	$in (X: $uint<32>)
	$out (Y Z: $uint<32>) $is
{
	Y := (X + 1) 
	Z0 := X
        Z1 := Z0
        Z2 := Z1
	$volatile Z  := Z2
}


$module [operator_check_daemon] $in() $out () $is
{
	$branchblock[lOoP] 
	{
		$dopipeline $depth 16 $buffering 2 $fullrate
		$merge $entry $loopback $endmerge
	
		X := in_data

		$call foo_bar (X) (Y Z)
		$call foo_bar_nonoperator (X) (YY)

		out_data := ((Y + YY) >> 1)

		$while 1
	}
}
