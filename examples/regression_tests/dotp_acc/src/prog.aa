$pipe out_data : $uint<32> $depth 2
$pipe in_data : $uint<32> $depth 2

$storage A: $array[32] $of $uint<32>
$storage B: $array[32] $of $uint<32>

$module [dotP_daemon] $in() $out () $is
{
	$branchblock[read_matrices] {
		$dopipeline $depth 15 $fullrate
			$merge $entry $loopback
				$phi I := $zero<6> $on $entry nI $on $loopback
				$phi x := in_data $on $entry, $loopback
			$endmerge
			$volatile nI := (I+1)
			
			A[I] := x
			B[I] := x

		$while (I < 31)
		
	}

	$branchblock[outerLoop] {
		$merge $entry outerloopback $endmerge 

		$branchblock[lOoP] {
			$dopipeline $depth 7 $fullrate
				$merge $entry $loopback
					$phi I := $zero<6> $on $entry nI $on $loopback
					$phi first_time := $one<1> $on $entry $zero<1> $on $loopback
				$endmerge

				$volatile nI := (I+1)

				// accumulate
				x := (x + (A[I]*B[I]))

			$while (I < 31)
		} (x => x)

		out_data := x

		$place [outerloopback]
	}

}
