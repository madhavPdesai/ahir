$pipe inpipe: $uint<16>
$pipe outpipe: $uint<16>
$pipe midpipe: $uint<20>
// a simple example.. of a shift-register.
// pipes are used extensively, and foreign
// modules are used to read and print.
$module [stage_0]
$in()
$out()
$is
{
  $branchblock[main]
  {
    $merge $entry loopback $endmerge
    // data comes in from here.
    $call Read () (inpipe)
    $place [loopback]
  }
}
$module [stage_1]
$in()
$out()
$is
{
  $branchblock[main]
  {
    $merge $entry loopback $endmerge
    tval := ($bitcast ($uint<20>) inpipe)
    midpipe := tval
    $report (stage_1 sent midpipe tval) 
    $rreport (stage_1 sent_midpipe tval)
    $place [loopback]
  }
}
$module [stage_2]
$in()
$out()
$is
{
  $branchblock[main]
  {
    $merge $entry loopback $endmerge
    tval := ($bitcast ($uint<16>) midpipe)
    outpipe := tval
    $report (stage_2 sent output tval)
    $place [loopback]
  }
}
$module [stage_3]
$in()
$out()
$is
{
  $branchblock[reader] 
  {
    $merge $entry $endmerge
    // data goes out from here.
    $dopipeline $depth 2 $buffering 1
    $merge $entry $loopback $endmerge
    $call Print(outpipe)()
    $while 1
  }
}
$foreign $module [Print] $in (a: $uint<16>) $out ()
$foreign $module [Read] $in () $out (result: $uint<16>)
