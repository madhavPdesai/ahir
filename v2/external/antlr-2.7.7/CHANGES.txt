Changes with Antlr 2.7.7 

# Terence Parr

* updated BaseAST.java to make the doWorkForAll method static. Same
behaviour, except no ClassCastExceptions when sibling.getFirstChild()
happens to return an AST that doesn't extend BaseAST.  Oliver Wong contributed
the patch.

* updated TokenStreamRewriteEngine.java to reflect bug fixes discovered
in v3 counterpart.

# Wolfgang Haefelinger
  * changing version to 2.7.7

  * configure*,scripts/csc.sh.in,*/AssemblyInfo.cs
    building of strong assemblies supported - default is building of 
    "weak" assemblies as before. Option --with-strong-assemblies=ARG
    enables strong assemblies (ARG must point to a keyfile). Such an
    assembly allows to be called by a partially trusted caller. This
    can be disabled by --disable-allow-partially-trusted-callers (if
    APTC is disabled, examples may not compile if located on network
    drive).

  * antlr/Makefile.in: couple of missing *.java files - missing in 2.7.6 - 
    added.

  * examples/cpp/heteroAST/*: fixed problem of missing include dir; example 
    compiles and tests fine.

  * examples/cpp/Makefile.in: enabled all directories (+ heteroAST and 
    flexLexer).

  * configure*, scripts/config.deps.in: fixes to reflect directory naming
    changes in C#.

  * examples/csharp/Makefile.in: disabled "broken" example HTML.
    
  * lib/python/antlr/antlr.py: fixed "hideen" type reported by Andrew
    McCulloh

Changes with Antlr 2.7.6

# Terence Parr
o added size, index methods to TokenStreamRewriteEngine.java

o bug in syn preds for tree parsers.  Submitted by Ole Kniemeyer.

o all Class.forName yanked out; uses thread context loader

o option to prevent System.exit termination

o added recover() method to lexers

o fixed code gen bug for syn preds in tree parsers.  Thanks to Marc Horowitz.

o BaseAST was not checking for null text in toString()

o Scott added java line ouput in code gen

o Prashant tweaked a few things for ANTLRStudio; a few new classes in ASdebug package

# Ric Klaren:

- Give errors if the user attempts to set k>1 in a TreeWalker

- Added missing Makefile.in for C++ heteroAST example and enabled it
  in configure.in

- Many small C++ support code and codegen tweaks fixes to increase
  portability. (Compaq Tru64 UNIX V5.1, VC's)

- Prevent '\' entering the bitset dump comments, might occur at end of
  line. Some compilers continue the comment to the next line (not sure
  if this is a compiler bug, should look it up)

For the thanks & kudos:

Among others thanks to Stuart Dootson, Bryan Ewbank, Kurt McCall and
a number of others who submitted patches. (my administration wasn't too
well this time)

# Wolfgang Haefelinger

  *) configure.* : support for 'fastjar' added  -fastjar will be preferred
     if jar and fastjar are available [geronimo, Nov 30th 2005].

  *) configure.*: fixed --with-bootclasspath error; configure --help
     incorrectly displayed this option as "--bootclasspath".  Thanks
     to Paul Jenner for reporting [geronimo, Nov 13th 2005].
      
  *) antlr/PythonCodeGenerator.java: fixed problems with raising 
     exceptions `SemanticException' and `MismatchedTokenException'
     unknown in current namespace. Thanks to Klaas Hofstra and 
     Benjamin Niemann for reporting [geronimo, Nov 13th 2005].

  *) examples/python/tinybasic/basic.g: fixed the unary MINUS problem
     reported by Klaas Hofstra [geronimo, Nov 13th 2005].

  *) configure*,scripts/[cxx|link].sh.in: Changes made by Kurt McCall
     added to support Tru64 Unix (version V5.1, Rev. 732) along with
     COMPAC/DEC CXX (version V6.5-042) [geronimo, Nov 13th 2005].

  *) antlr/PythonCodeGenerator.java: 'inputState.guessing' bug reported
     by Chris Minnoy and  Benjamin Niemann fixed [Mark Kole, Jul 4th 2005].

  *) lib/python/antlr/antlr.py: removed all 'tabs'; applied changes of patch
     `1126872211596/antlr.py.patch' regarding getting line and column number.
     Unknown patch contribution [geronimo, Nov 13th 2005].

# Changes for C# support (by Kunle Odutola & Micheal Jordan):

-- Fixed isssue where an empty input stream caused an exception in the lexer
due to the
   caching of LA1 and LA2. StringTemplate triggers this.

-- The rewind() method did not take into account the value of the case
insensitive flag.
   Reported by Dr. Hartmut Kocher.

--  ***BREAKING CHANGE*** ASTPair object pool had a race condition in
multi-threaded
    environments. ASTPair is now a struct.

--  C# examples now properly initialize the ASTFactory before a tree parser
is used.
