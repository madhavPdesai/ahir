##xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@stdvars@
##xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

## do not change this value

subdir=examples/cpp/multiLexer

srcdir=@abs_top_srcdir@/examples/cpp/multiLexer
objdir=@abs_this_builddir@/examples/cpp/multiLexer

this : test
test : test1

all: multiLexer test

javadoclex_g_FILES = \
	$(srcdir)/javadoclex.g \
	$(eol)

javadoclex_g_cxx_FILES = \
	$(objdir)/DemoJavaDocLexer.cpp \
	$(eol)

javadoclex_g_hpp_FILES = \
	$(objdir)/DemoJavaDocLexer.hpp \
	$(objdir)/JavaDocTokenTypes.hpp \
	$(eol)

javadoclex_g_txt_FILES = \
	$(objdir)/JavaDocTokenTypes.txt \
	$(eol)

javadoclex_g_gen_FILES = \
	$(javadoclex_g_cxx_FILES) \
	$(javadoclex_g_hpp_FILES) \
	$(javadoclex_g_txt_FILES) \
	$(eol)

javadoclex_g_obj_FILES = \
	$(objdir)/DemoJavaDocLexer@OBJEXT@ \
	$(eol)

javadocparse_g_FILES = \
	$(srcdir)/javadocparse.g \
	$(eol)

javadocparse_g_cxx_FILES = \
	$(objdir)/DemoJavaDocParser.cpp \
	$(eol)

javadocparse_g_hpp_FILES = \
	$(objdir)/DemoJavaDocParser.hpp \
	$(objdir)/DemoJavaDocParserTokenTypes.hpp \
	$(eol)

javadocparse_g_txt_FILES = \
	$(objdir)/DemoJavaDocParserTokenTypes.txt \
	$(eol)

javadocparse_g_gen_FILES = \
	$(javadocparse_g_cxx_FILES) \
	$(javadocparse_g_hpp_FILES) \
	$(javadocparse_g_txt_FILES) \
	$(eol)

javadocparse_g_obj_FILES = \
	$(objdir)/DemoJavaDocParser@OBJEXT@ \
	$(eol)

javalex_g_FILES = \
	$(srcdir)/javalex.g \
	$(eol)

javalex_g_cxx_FILES = \
	$(objdir)/DemoJavaLexer.cpp \
	$(eol)

javalex_g_hpp_FILES = \
	$(objdir)/DemoJavaLexer.hpp \
	$(objdir)/JavaTokenTypes.hpp \
	$(eol)

javalex_g_txt_FILES = \
	$(objdir)/JavaTokenTypes.txt \
	$(eol)

javalex_g_gen_FILES = \
	$(javalex_g_cxx_FILES) \
	$(javalex_g_hpp_FILES) \
	$(javalex_g_txt_FILES) \
	$(eol)

javalex_g_obj_FILES = \
	$(objdir)/DemoJavaLexer@OBJEXT@ \
	$(eol)

javaparse_g_FILES = \
	$(srcdir)/javaparse.g \
	$(eol)

javaparse_g_cxx_FILES = \
	$(objdir)/DemoJavaParser.cpp \
	$(eol)

javaparse_g_hpp_FILES = \
	$(objdir)/DemoJavaParser.hpp \
	$(objdir)/DemoJavaParserTokenTypes.hpp \
	$(eol)

javaparse_g_txt_FILES = \
	$(objdir)/DemoJavaParserTokenTypes.txt \
	$(eol)

javaparse_g_gen_FILES = \
	$(javaparse_g_cxx_FILES) \
	$(javaparse_g_hpp_FILES) \
	$(javaparse_g_txt_FILES) \
	$(eol)

javaparse_g_obj_FILES = \
	$(objdir)/DemoJavaParser@OBJEXT@ \
	$(eol)

## Source files
multiLexer_cxx_FILES = \
	$(javadoclex_g_cxx_files) \
	$(javadocparse_g_cxx_files) \
	$(javalex_g_cxx_files) \
	$(javaparse_g_cxx_files) \
	$(srcdir)/Main.cpp \
	$(srcdir)/DemoJavaDocLexer.cpp \
	$(srcdir)/DemoJavaLexer.cpp \
	$(srcdir)/DemoJavaDocParser.cpp \
	$(srcdir)/DemoJavaParser.cpp \
	$(eol)

## Object files
multiLexer_obj_FILES = \
	$(javadoclex_g_obj_files) \
	$(javadocparse_g_obj_files) \
	$(javalex_g_obj_files) \
	$(javaparse_g_obj_files) \
	$(objdir)/Main@OBJEXT@ \
	$(objdir)/DemoJavaDocLexer@OBJEXT@ \
	$(objdir)/DemoJavaLexer@OBJEXT@ \
	$(objdir)/DemoJavaDocParser@OBJEXT@ \
	$(objdir)/DemoJavaParser@OBJEXT@ \
	$(eol)

## Test commands
test1_cmd = $(objdir)/multiLexer < $(srcdir)/test.in

## Tests to be executed
test1: multiLexer
	@ v="$(verbose)"; if test $$v -gt 0 ; then  @ECHO@ "$(test1_cmd)" ;  else  @ECHO@ "exec test1 ..";  fi
	@ $(test1_cmd)

## How to make binaries
multiLexer : $(multiLexer_obj_FILES) @ANTLR_LIB@
	@CXX_LINK_CMD@ $@ $(multiLexer_obj_FILES)

$(objdir)/CommonTokenTypes.txt : $(srcdir)/CommonTokenTypes.txt
	@CP@ $< $@

## How to compile ANTLR grammar files
$(objdir)/.javadoclex.g : $(srcdir)/javadoclex.g $(objdir)/CommonTokenTypes.txt @ANTLR_JAR@
	@ANTLR_COMPILE_CMD@ $(srcdir)/javadoclex.g
	$(TOUCH) `@CYGPATH_W@ $(objdir)/.javadoclex.g`

$(javadoclex_g_gen_FILES): $(objdir)/.javadoclex.g

$(objdir)/.javadocparse.g : $(srcdir)/javadocparse.g @ANTLR_JAR@
	@ANTLR_COMPILE_CMD@ $(srcdir)/javadocparse.g
	$(TOUCH) `@CYGPATH_W@ $(objdir)/.javadocparse.g`

$(javadocparse_g_gen_FILES): $(objdir)/.javadocparse.g

$(objdir)/.javalex.g : $(srcdir)/javalex.g $(objdir)/CommonTokenTypes.txt @ANTLR_JAR@
	@ANTLR_COMPILE_CMD@ $(srcdir)/javalex.g
	$(TOUCH) `@CYGPATH_W@ $(objdir)/.javalex.g`

$(javalex_g_gen_FILES): $(objdir)/.javalex.g

$(objdir)/.javaparse.g : $(srcdir)/javaparse.g @ANTLR_JAR@
	@ANTLR_COMPILE_CMD@ $(srcdir)/javaparse.g
	$(TOUCH) `@CYGPATH_W@ $(objdir)/.javaparse.g`

$(javaparse_g_gen_FILES): $(objdir)/.javaparse.g

## Dependencies between .g files
$(objdir)/.javaparse.g : $(objdir)/.javalex.g
$(objdir)/.javadocparse.g : $(objdir)/.javadoclex.g

## GNU make - how to make object file
$(objdir)/%@OBJEXT@ : $(srcdir)/%.cpp
	@ @CXX_COMPILE_CMD@ $<

## GNU make - how to make object file
$(objdir)/%@OBJEXT@ : $(objdir)/%.cpp
	@ @CXX_COMPILE_CMD@ $<

## GNU make - how to make object file
%@OBJEXT@ : $(srcdir)/%.cpp
	@ @CXX_COMPILE_CMD@ $<

## GNU make - how to make object file
%@OBJEXT@ : $(objdir)/%.cpp
	@ @CXX_COMPILE_CMD@ $<

#####
## GNU make - how to make object file
$(objdir)/%@OBJEXT@ : $(srcdir)/%.c
	@ @C_COMPILE_CMD@ $<

## GNU make - how to make object file
$(objdir)/%@OBJEXT@ : $(objdir)/%.c
	@ @C_COMPILE_CMD@ $<

## GNU make - how to make object file
%@OBJEXT@ : $(srcdir)/%.c
	@ @C_COMPILE_CMD@ $<

## Housecleaning
clean:
	- @RMF@ *.o *.obj *.exe \
	$(javadoclex_g_gen_FILES) \
	$(objdir)/.javadoclex.g \
	$(javadocparse_g_gen_FILES) \
	$(objdir)/.javadocparse.g \
	$(javalex_g_gen_FILES) \
	$(objdir)/.javalex.g \
	$(javaparse_g_gen_FILES) \
	$(objdir)/.javaparse.g \
	multiLexer

distclean: clean
	@RMF@ Makefile

## If cxx.sh script changed ..
$(javadoclex_g_obj_FILES) : @abs_this_builddir@/scripts/cxx.sh
$(javadocparse_g_obj_FILES) : @abs_this_builddir@/scripts/cxx.sh
$(javalex_g_obj_FILES) : @abs_this_builddir@/scripts/cxx.sh
$(javaparse_g_obj_FILES) : @abs_this_builddir@/scripts/cxx.sh
## If link.sh script changed ..
$(javadoclex_g_obj_FILES) : @abs_this_builddir@/scripts/link.sh
$(javadocparse_g_obj_FILES) : @abs_this_builddir@/scripts/link.sh
$(javalex_g_obj_FILES) : @abs_this_builddir@/scripts/link.sh
$(javaparse_g_obj_FILES) : @abs_this_builddir@/scripts/link.sh

$(objdir)/Main@OBJEXT@: \
	$(srcdir)/Main.cpp \
	$(objdir)/DemoJavaLexer.hpp \
	$(sourcetree)/lib/cpp/antlr/config.hpp \
	$(sourcetree)/lib/cpp/antlr/CommonToken.hpp \
	$(sourcetree)/lib/cpp/antlr/Token.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenRefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/InputBuffer.hpp \
	$(sourcetree)/lib/cpp/antlr/CircularQueue.hpp \
	$(sourcetree)/lib/cpp/antlr/BitSet.hpp \
	$(objdir)/JavaTokenTypes.hpp \
	$(sourcetree)/lib/cpp/antlr/CharScanner.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStream.hpp \
	$(sourcetree)/lib/cpp/antlr/RecognitionException.hpp \
	$(sourcetree)/lib/cpp/antlr/ANTLRException.hpp \
	$(sourcetree)/lib/cpp/antlr/SemanticException.hpp \
	$(sourcetree)/lib/cpp/antlr/MismatchedCharException.hpp \
	$(sourcetree)/lib/cpp/antlr/LexerSharedInputState.hpp \
	$(sourcetree)/lib/cpp/antlr/RefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/CharBuffer.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamSelector.hpp \
	$(objdir)/DemoJavaDocLexer.hpp \
	$(objdir)/JavaDocTokenTypes.hpp \
	$(objdir)/DemoJavaParser.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenBuffer.hpp \
	$(objdir)/DemoJavaParserTokenTypes.hpp \
	$(sourcetree)/lib/cpp/antlr/LLkParser.hpp \
	$(sourcetree)/lib/cpp/antlr/Parser.hpp \
	$(sourcetree)/lib/cpp/antlr/MismatchedTokenException.hpp \
	$(sourcetree)/lib/cpp/antlr/AST.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTRefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTFactory.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTArray.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTPair.hpp \
	$(sourcetree)/lib/cpp/antlr/ParserSharedInputState.hpp

$(objdir)/DemoJavaDocLexer@OBJEXT@: \
	$(objdir)/DemoJavaDocLexer.cpp \
	$(objdir)/DemoJavaDocLexer.hpp \
	$(sourcetree)/lib/cpp/antlr/config.hpp \
	$(sourcetree)/lib/cpp/antlr/CommonToken.hpp \
	$(sourcetree)/lib/cpp/antlr/Token.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenRefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/InputBuffer.hpp \
	$(sourcetree)/lib/cpp/antlr/CircularQueue.hpp \
	$(sourcetree)/lib/cpp/antlr/BitSet.hpp \
	$(objdir)/JavaDocTokenTypes.hpp \
	$(sourcetree)/lib/cpp/antlr/CharScanner.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStream.hpp \
	$(sourcetree)/lib/cpp/antlr/RecognitionException.hpp \
	$(sourcetree)/lib/cpp/antlr/ANTLRException.hpp \
	$(sourcetree)/lib/cpp/antlr/SemanticException.hpp \
	$(sourcetree)/lib/cpp/antlr/MismatchedCharException.hpp \
	$(sourcetree)/lib/cpp/antlr/LexerSharedInputState.hpp \
	$(sourcetree)/lib/cpp/antlr/RefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/CharBuffer.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamSelector.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamException.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamIOException.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamRecognitionException.hpp \
	$(sourcetree)/lib/cpp/antlr/CharStreamException.hpp \
	$(sourcetree)/lib/cpp/antlr/CharStreamIOException.hpp \
	$(sourcetree)/lib/cpp/antlr/NoViableAltForCharException.hpp

$(objdir)/DemoJavaLexer@OBJEXT@: \
	$(objdir)/DemoJavaLexer.cpp \
	$(objdir)/DemoJavaLexer.hpp \
	$(sourcetree)/lib/cpp/antlr/config.hpp \
	$(sourcetree)/lib/cpp/antlr/CommonToken.hpp \
	$(sourcetree)/lib/cpp/antlr/Token.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenRefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/InputBuffer.hpp \
	$(sourcetree)/lib/cpp/antlr/CircularQueue.hpp \
	$(sourcetree)/lib/cpp/antlr/BitSet.hpp \
	$(objdir)/JavaTokenTypes.hpp \
	$(sourcetree)/lib/cpp/antlr/CharScanner.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStream.hpp \
	$(sourcetree)/lib/cpp/antlr/RecognitionException.hpp \
	$(sourcetree)/lib/cpp/antlr/ANTLRException.hpp \
	$(sourcetree)/lib/cpp/antlr/SemanticException.hpp \
	$(sourcetree)/lib/cpp/antlr/MismatchedCharException.hpp \
	$(sourcetree)/lib/cpp/antlr/LexerSharedInputState.hpp \
	$(sourcetree)/lib/cpp/antlr/RefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/CharBuffer.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamSelector.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamException.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamIOException.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStreamRecognitionException.hpp \
	$(sourcetree)/lib/cpp/antlr/CharStreamException.hpp \
	$(sourcetree)/lib/cpp/antlr/CharStreamIOException.hpp \
	$(sourcetree)/lib/cpp/antlr/NoViableAltForCharException.hpp

$(objdir)/DemoJavaDocParser@OBJEXT@: \
	$(objdir)/DemoJavaDocParser.cpp \
	$(objdir)/DemoJavaDocParser.hpp \
	$(sourcetree)/lib/cpp/antlr/config.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStream.hpp \
	$(sourcetree)/lib/cpp/antlr/Token.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenRefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenBuffer.hpp \
	$(sourcetree)/lib/cpp/antlr/CircularQueue.hpp \
	$(objdir)/DemoJavaDocParserTokenTypes.hpp \
	$(sourcetree)/lib/cpp/antlr/LLkParser.hpp \
	$(sourcetree)/lib/cpp/antlr/Parser.hpp \
	$(sourcetree)/lib/cpp/antlr/BitSet.hpp \
	$(sourcetree)/lib/cpp/antlr/RecognitionException.hpp \
	$(sourcetree)/lib/cpp/antlr/ANTLRException.hpp \
	$(sourcetree)/lib/cpp/antlr/MismatchedTokenException.hpp \
	$(sourcetree)/lib/cpp/antlr/AST.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTRefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTFactory.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTArray.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTPair.hpp \
	$(sourcetree)/lib/cpp/antlr/ParserSharedInputState.hpp \
	$(sourcetree)/lib/cpp/antlr/RefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/NoViableAltException.hpp \
	$(sourcetree)/lib/cpp/antlr/SemanticException.hpp

$(objdir)/DemoJavaParser@OBJEXT@: \
	$(objdir)/DemoJavaParser.cpp \
	$(objdir)/DemoJavaParser.hpp \
	$(sourcetree)/lib/cpp/antlr/config.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenStream.hpp \
	$(sourcetree)/lib/cpp/antlr/Token.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenRefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/TokenBuffer.hpp \
	$(sourcetree)/lib/cpp/antlr/CircularQueue.hpp \
	$(objdir)/DemoJavaParserTokenTypes.hpp \
	$(sourcetree)/lib/cpp/antlr/LLkParser.hpp \
	$(sourcetree)/lib/cpp/antlr/Parser.hpp \
	$(sourcetree)/lib/cpp/antlr/BitSet.hpp \
	$(sourcetree)/lib/cpp/antlr/RecognitionException.hpp \
	$(sourcetree)/lib/cpp/antlr/ANTLRException.hpp \
	$(sourcetree)/lib/cpp/antlr/MismatchedTokenException.hpp \
	$(sourcetree)/lib/cpp/antlr/AST.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTRefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTFactory.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTArray.hpp \
	$(sourcetree)/lib/cpp/antlr/ASTPair.hpp \
	$(sourcetree)/lib/cpp/antlr/ParserSharedInputState.hpp \
	$(sourcetree)/lib/cpp/antlr/RefCount.hpp \
	$(sourcetree)/lib/cpp/antlr/NoViableAltException.hpp \
	$(sourcetree)/lib/cpp/antlr/SemanticException.hpp \
	$(objdir)/DemoJavaDocParser.hpp \
	$(objdir)/DemoJavaDocParserTokenTypes.hpp

##xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@stddeps@
##xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
