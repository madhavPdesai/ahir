#ifndef INC_vcParserTokenTypes_hpp_
#define INC_vcParserTokenTypes_hpp_

/* $ANTLR 2.7.7 (2006-11-01): "vc.g" -> "vcParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API vcParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		GATED_CLOCK = 4,
		SIMPLE_IDENTIFIER = 5,
		LIFO = 6,
		NOBLOCK = 7,
		SHIFTREG = 8,
		PIPE = 9,
		UINTEGER = 10,
		DEPTH = 11,
		IN = 12,
		OUT = 13,
		SIGNAL = 14,
		P2P = 15,
		FULLRATE = 16,
		BYPASS = 17,
		MEMORYSPACE = 18,
		UNORDERED = 19,
		LBRACE = 20,
		RBRACE = 21,
		CAPACITY = 22,
		DATAWIDTH = 23,
		ADDRWIDTH = 24,
		MAXACCESSWIDTH = 25,
		OBJECT = 26,
		COLON = 27,
		USE_GATED_CLOCK = 28,
		FOREIGN = 29,
		PIPELINE = 30,
		BUFFERING = 31,
		DETERMINISTIC = 32,
		OPERATOR = 33,
		VOLATILE = 34,
		USEONCE = 35,
		MODULE = 36,
		EQUIVALENT = 37,
		LPAREN = 38,
		RPAREN = 39,
		OPEN = 40,
		DIV_OP = 41,
		ENTRY = 42,
		EXIT = 43,
		CONTROLPATH = 44,
		ALIAS = 45,
		PLACE = 46,
		LEFT_OPEN = 47,
		TRANSITION = 48,
		DEAD = 49,
		TIED_HIGH = 50,
		DELAY = 51,
		SERIESBLOCK = 52,
		PARALLELBLOCK = 53,
		BRANCHBLOCK = 54,
		LOOPBLOCK = 55,
		TERMINATE = 56,
		PHISEQUENCER = 57,
		TRANSITIONMERGE = 58,
		BIND = 59,
		IMPLIES = 60,
		ULE_OP = 61,
		MERGE = 62,
		BRANCH = 63,
		FORKBLOCK = 64,
		PIPELINEDFORKBLOCK = 65,
		N_ULL = 66,
		JOIN = 67,
		MARKEDJOIN = 68,
		FORK = 69,
		DATAPATH = 70,
		WAR = 71,
		GUARD = 72,
		NOT_OP = 73,
		FLOWTHROUGH = 74,
		PLUS_OP = 75,
		MINUS_OP = 76,
		MUL_OP = 77,
		SHL_OP = 78,
		SHR_OP = 79,
		ROL_OP = 80,
		ROR_OP = 81,
		UGT_OP = 82,
		UGE_OP = 83,
		EQ_OP = 84,
		ULT_OP = 85,
		NEQ_OP = 86,
		BITSEL_OP = 87,
		CONCAT_OP = 88,
		UNORDERED_OP = 89,
		OR_OP = 90,
		AND_OP = 91,
		XOR_OP = 92,
		NOR_OP = 93,
		NAND_OP = 94,
		XNOR_OP = 95,
		SHRA_OP = 96,
		SGT_OP = 97,
		SGE_OP = 98,
		SLT_OP = 99,
		SLE_OP = 100,
		StoS_ASSIGN_OP = 101,
		StoU_ASSIGN_OP = 102,
		UtoS_ASSIGN_OP = 103,
		FtoS_ASSIGN_OP = 104,
		FtoU_ASSIGN_OP = 105,
		StoF_ASSIGN_OP = 106,
		UtoF_ASSIGN_OP = 107,
		FtoF_ASSIGN_OP = 108,
		DECODE_OP = 109,
		ENCODE_OP = 110,
		P_ENCODE_OP = 111,
		BITREDUCE_OR_OP = 112,
		BITREDUCE_AND_OP = 113,
		BITREDUCE_XOR_OP = 114,
		BRANCH_OP = 115,
		SELECT_OP = 116,
		SLICE_OP = 117,
		PERMUTE_OP = 118,
		ASSIGN_OP = 119,
		HASH = 120,
		CUT_THROUGH = 121,
		EQUIVALENCE_OP = 122,
		CALL = 123,
		INLINE = 124,
		IOPORT = 125,
		BARRIER = 126,
		LOAD = 127,
		FROM = 128,
		STORE = 129,
		TO = 130,
		PHI = 131,
		LBRACKET = 132,
		RBRACKET = 133,
		CONSTANT = 134,
		INTERMEDIATE = 135,
		WIRE = 136,
		BINARYSTRING = 137,
		HEXSTRING = 138,
		COMMA = 139,
		INT = 140,
		FLOAT = 141,
		POINTER = 142,
		ARRAY = 143,
		OF = 144,
		RECORD = 145,
		SIMPLE_IDENTIFER = 146,
		ATTRIBUTE = 147,
		QUOTED_STRING = 148,
		DPE = 149,
		LIBRARY = 150,
		REQS = 151,
		ACKS = 152,
		HIDDEN = 153,
		PARAMETER = 154,
		PORT = 155,
		MAP = 156,
		MIN = 157,
		MAX = 158,
		DPEINSTANCE = 159,
		LINK = 160,
		AT = 161,
		ORDERED_OP = 162,
		WHITESPACE = 163,
		SINGLELINECOMMENT = 164,
		ALPHA = 165,
		DIGIT = 166,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_vcParserTokenTypes_hpp_*/
